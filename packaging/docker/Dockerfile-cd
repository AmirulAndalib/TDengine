# build arg: dirName tdengine-tsdb-enterprise-3.3.8.1
# build arg: pkgFile tdengine-tsdb-enterprise-*-linux-*.tar.gz
# stage1: build the installer image
FROM tdengine/tdengine-debian-base AS tdengine-installer

ARG dirName
ARG pkgFile

COPY ${pkgFile} /tmp/
RUN cd /tmp && tar -zxf ${pkgFile} && \
    cd ${dirName} && \
    ./install.sh -e no && \
    cd  /usr/local/taos/bin/ && \
    rm -f taosinspect tdengine-datasource.zip* *.sh && \
    cd /usr/local/taos/driver/ && \
    rm -rf libjemalloc* libtcmalloc*  && \
    ln -sf libtaos.so.* libtaos.so && \
    ln -sf libtaosnative.so.* libtaosnative.so && \
    ln -sf libtaosws.so.* libtaosws.so 

# stage2: runtime image
FROM tdengine/tdengine-debian-base 

# copy bin/lib/config/include file from installer stage
COPY --from=tdengine-installer /usr/local/taos/bin/taos* /usr/bin/
COPY --from=tdengine-installer /usr/local/taos/driver/ /usr/lib/
COPY --from=tdengine-installer /usr/local/taos/include/ /usr/include/
COPY --from=tdengine-installer /etc/taos/ /etc/taos/

# copy entrypoint.sh from packaging directory
COPY ./bin/* /usr/bin/

# set environment variables
ENV LD_LIBRARY_PATH="/usr/lib/:/usr/local/lib" \
    PATH="/usr/bin:${PATH:-}" \
    TAOS_QUERY_USE_MEMORY_POOL=0

# create initialization script directory
RUN mkdir /docker-entrypoint-initdb.d

# define data and log volumes
VOLUME [ "/var/lib/taos", "/var/log/taos"]

# set container startup command
ENTRYPOINT ["/usr/bin/tini", "--", "/usr/bin/entrypoint.sh"]

# set stop signal
STOPSIGNAL SIGINT

# expose ports
# 6030 taosd
# 6041 taosAdapter
# 6043 taosKeeper
# 6060 taosExplorer
EXPOSE 6030 6041 6043 6060