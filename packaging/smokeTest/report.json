{"created": 1723086900.813068, "duration": 52.96478581428528, "exitcode": 1, "root": "/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest", "environment": {}, "summary": {"skipped": 5, "failed": 1, "error": 1, "total": 7, "collected": 7}, "collectors": [{"nodeid": "", "outcome": "passed", "result": [{"nodeid": ".", "type": "Dir"}]}, {"nodeid": "assets", "outcome": "passed", "result": []}, {"nodeid": "test_server_linux.py::TestServerLinux", "outcome": "passed", "result": [{"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# army,python3 ./test.py -f query/query_basic.py -N 3]", "type": "Function", "lineno": 50}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# system-test,python3 ./test.py -f 1-insert/insert_column_value.py]", "type": "Function", "lineno": 50}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# system-test,python3 ./test.py -f 2-query/primary_ts_base_5.py]", "type": "Function", "lineno": 50}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# system-test,python3 ./test.py -f 2-query/case_when.py]", "type": "Function", "lineno": 50}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# system-test,python3 ./test.py -f 2-query/partition_limit_interval.py]", "type": "Function", "lineno": 50}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[system-test,python3 ./test.py -f 2-query/join.py]", "type": "Function", "lineno": 50}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[system-test,python3 ./test.py -f 2-query/fill.py]", "type": "Function", "lineno": 50}]}, {"nodeid": "test_server_linux.py", "outcome": "passed", "result": [{"nodeid": "test_server_linux.py::TestServerLinux", "type": "Class"}]}, {"nodeid": "test_server_linux.txt", "outcome": "passed", "result": []}, {"nodeid": ".", "outcome": "passed", "result": [{"nodeid": "assets", "type": "Dir"}, {"nodeid": "test_server_linux.py", "type": "Module"}, {"nodeid": "test_server_linux.txt", "type": "DoctestTextfile"}]}], "tests": [{"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# army,python3 ./test.py -f query/query_basic.py -N 3]", "lineno": 50, "outcome": "skipped", "keywords": ["test_execute_cases[# army,python3 ./test.py -f query/query_basic.py -N 3]", "# army,python3 ./test.py -f query/query_basic.py -N 3", "TestServerLinux", "test_server_linux.py", "smokeTest", ""], "setup": {"duration": 32.502775224000004, "outcome": "skipped", "stdout": "CMD: bash getAndRunInstaller.sh -m enterprise -f server -l false -c x64 -v 3.3.2.6 -o smoking -s nas -t tar\nSTDOUT: testFile:server,verMode:enterprise,lite:false,cpuType:x64,packageType:tar,version-3.3.2.6,originversion:smoking,sourcePath:nas\ntdPath:TDengine-enterprise-3.3.2.6,packageName:TDengine-enterprise-3.3.2.6-macOS-x64.tar.gz}\n\u001b[1;32m===== install basesoft =====\u001b[0m\n\n/usr/bin/apt\n/usr/bin/apt\n/usr/bin/expect\n\u001b[0;33mexpect is already installed\u001b[0m\n\u001b[1;32m===== Uninstall all components of TDeingne =====\u001b[0m\n\n/usr/local/bin/rmtaos\n\u001b[0;33muninstall all components of TDeingne:rmtaos\u001b[0m\n\u001b[1;32m===== new workroom path =====\u001b[0m\n\n\u001b[0;34mmkdir -p /packageTest\u001b[0m\n\u001b[1;32m===== download  installPackage =====\u001b[0m\n\n\u001b[1;32m===== install Package =====\u001b[0m\n\n\u001b[1;32m===== check installPackage File of tar =====\u001b[0m\n\n\u001b[0;33munzip the new installation package\u001b[0m\n\u001b[0;34mtar -xf TDengine-enterprise-3.3.2.6-macOS-x64.tar.gz\u001b[0m\n\u001b[1;32mThe number and names of files are the same as previous installation packages\u001b[0m\n\n\u001b[0;33m===== install Package of tar =====\u001b[0m\n\u001b[0;34mbash install.sh  -e no  \u001b[0m\n\u001b[0;33m===== end of shell file =====\u001b[0m\n\nSTDERR: getAndRunInstaller.sh: line 120: apt-get: command not found\ngetAndRunInstaller.sh: line 120: apt-get: command not found\nsudo: 3 incorrect password attempts\nmkdir: /packageTest: Read-only file system\ngetAndRunInstaller.sh: line 214: cd: /packageTest: No such file or directory\ngetAndRunInstaller.sh: line 218: cd: /packageTest: No such file or directory\ncp: ./debRpmAutoInstall.sh and /Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/debRpmAutoInstall.sh are identical (not copied).\ngetAndRunInstaller.sh: line 264: cd: /packageTest: No such file or directory\ntar: Error opening archive: Failed to open 'TDengine-enterprise-3.3.2.6-macOS-x64.tar.gz'\ngetAndRunInstaller.sh: line 268: cd: /packageTest/TDengine-enterprise-3.3.2.6: No such file or directory\ngetAndRunInstaller.sh: line 270: cd: /packageTest: No such file or directory\ngetAndRunInstaller.sh: line 271: /packageTest/diffFile.log: No such file or directory\ncat: /packageTest/diffFile.log: No such file or directory\ngetAndRunInstaller.sh: line 284: cd: /packageTest/TDengine-enterprise-3.3.2.6: No such file or directory\nbash: install.sh: No such file or directory\ngetAndRunInstaller.sh: line 298: cd: /packageTest: No such file or directory\n\nReturn Code: 0\n", "longrepr": "('/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/test_server_linux.py', 51, 'Skipped: This case has been marked as skipped')"}, "teardown": {"duration": 0.0003304849999992143, "outcome": "passed"}}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# system-test,python3 ./test.py -f 1-insert/insert_column_value.py]", "lineno": 50, "outcome": "skipped", "keywords": ["test_execute_cases[# system-test,python3 ./test.py -f 1-insert/insert_column_value.py]", "# system-test,python3 ./test.py -f 1-insert/insert_column_value.py", "TestServerLinux", "test_server_linux.py", "smokeTest", ""], "setup": {"duration": 0.0003081440000016755, "outcome": "skipped", "longrepr": "('/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/test_server_linux.py', 51, 'Skipped: This case has been marked as skipped')"}, "teardown": {"duration": 0.00020807100000297396, "outcome": "passed"}}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# system-test,python3 ./test.py -f 2-query/primary_ts_base_5.py]", "lineno": 50, "outcome": "skipped", "keywords": ["test_execute_cases[# system-test,python3 ./test.py -f 2-query/primary_ts_base_5.py]", "# system-test,python3 ./test.py -f 2-query/primary_ts_base_5.py", "TestServerLinux", "test_server_linux.py", "smokeTest", ""], "setup": {"duration": 0.0002838189999962992, "outcome": "skipped", "longrepr": "('/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/test_server_linux.py', 51, 'Skipped: This case has been marked as skipped')"}, "teardown": {"duration": 0.0003406390000009196, "outcome": "passed"}}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# system-test,python3 ./test.py -f 2-query/case_when.py]", "lineno": 50, "outcome": "skipped", "keywords": ["test_execute_cases[# system-test,python3 ./test.py -f 2-query/case_when.py]", "# system-test,python3 ./test.py -f 2-query/case_when.py", "TestServerLinux", "test_server_linux.py", "smokeTest", ""], "setup": {"duration": 0.00027352700000449204, "outcome": "skipped", "longrepr": "('/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/test_server_linux.py', 51, 'Skipped: This case has been marked as skipped')"}, "teardown": {"duration": 0.00019377499999961856, "outcome": "passed"}}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[# system-test,python3 ./test.py -f 2-query/partition_limit_interval.py]", "lineno": 50, "outcome": "skipped", "keywords": ["test_execute_cases[# system-test,python3 ./test.py -f 2-query/partition_limit_interval.py]", "# system-test,python3 ./test.py -f 2-query/partition_limit_interval.py", "TestServerLinux", "test_server_linux.py", "smokeTest", ""], "setup": {"duration": 0.0002740560000020764, "outcome": "skipped", "longrepr": "('/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/test_server_linux.py', 51, 'Skipped: This case has been marked as skipped')"}, "teardown": {"duration": 0.00020439699999741379, "outcome": "passed"}}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[system-test,python3 ./test.py -f 2-query/join.py]", "lineno": 50, "outcome": "failed", "keywords": ["test_execute_cases[system-test,python3 ./test.py -f 2-query/join.py]", "system-test,python3 ./test.py -f 2-query/join.py", "TestServerLinux", "test_server_linux.py", "smokeTest", ""], "setup": {"duration": 0.6673988679999994, "outcome": "passed", "stdout": "cd /Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/../../tests/system-test&&sudo python3 ./test.py -f 2-query/join.py\n"}, "call": {"duration": 0.0010511289999968199, "outcome": "failed", "crash": {"path": "/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/test_server_linux.py", "lineno": 67, "message": "AssertionError: Command 'python3 ./test.py -f 2-query/join.py' failed with return code 1\nassert 1 == 0"}, "traceback": [{"path": "test_server_linux.py", "lineno": 67, "message": "AssertionError"}], "stdout": "Running command: python3 ./test.py -f 2-query/join.py\nSTDOUT: \nSTDERR: sudo: 3 incorrect password attempts\n\nReturn Code: 1\n", "longrepr": "self = <test_server_linux.TestServerLinux object at 0x1092c5190>, setup_module = None\nrun_command = {'command': 'python3 ./test.py -f 2-query/join.py', 'returncode': 1, 'stderr': 'sudo: 3 incorrect password attempts\\n', 'stdout': ''}\n\n    def test_execute_cases(self, setup_module, run_command):\n        # assert the result\n        if run_command['returncode'] != 0:\n            print(f\"Running command: {run_command['command']}\")\n            print(\"STDOUT:\", run_command['stdout'])\n            print(\"STDERR:\", run_command['stderr'])\n            print(\"Return Code:\", run_command['returncode'])\n        else:\n            print(f\"Running command: {run_command['command']}\")\n            if len(run_command['stdout']) > 1000:\n                print(\"STDOUT:\", run_command['stdout'][:1000] + \"...\")\n            else:\n                print(\"STDOUT:\", run_command['stdout'])\n            print(\"STDERR:\", run_command['stderr'])\n            print(\"Return Code:\", run_command['returncode'])\n    \n>       assert run_command[\n                   'returncode'] == 0, f\"Command '{run_command['command']}' failed with return code {run_command['returncode']}\"\nE       AssertionError: Command 'python3 ./test.py -f 2-query/join.py' failed with return code 1\nE       assert 1 == 0\n\ntest_server_linux.py:67: AssertionError"}, "teardown": {"duration": 0.000283443000000716, "outcome": "passed"}}, {"nodeid": "test_server_linux.py::TestServerLinux::test_execute_cases[system-test,python3 ./test.py -f 2-query/fill.py]", "lineno": 50, "outcome": "error", "keywords": ["test_execute_cases[system-test,python3 ./test.py -f 2-query/fill.py]", "system-test,python3 ./test.py -f 2-query/fill.py", "TestServerLinux", "test_server_linux.py", "smokeTest", ""], "setup": {"duration": 0.6697767379999959, "outcome": "passed", "stdout": "cd /Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/../../tests/system-test&&sudo python3 ./test.py -f 2-query/fill.py\n"}, "call": {"duration": 0.0009420599999998558, "outcome": "failed", "crash": {"path": "/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/test_server_linux.py", "lineno": 67, "message": "AssertionError: Command 'python3 ./test.py -f 2-query/fill.py' failed with return code 1\nassert 1 == 0"}, "traceback": [{"path": "test_server_linux.py", "lineno": 67, "message": "AssertionError"}], "stdout": "Running command: python3 ./test.py -f 2-query/fill.py\nSTDOUT: \nSTDERR: sudo: 3 incorrect password attempts\n\nReturn Code: 1\n", "longrepr": "self = <test_server_linux.TestServerLinux object at 0x1092c5250>, setup_module = None\nrun_command = {'command': 'python3 ./test.py -f 2-query/fill.py', 'returncode': 1, 'stderr': 'sudo: 3 incorrect password attempts\\n', 'stdout': ''}\n\n    def test_execute_cases(self, setup_module, run_command):\n        # assert the result\n        if run_command['returncode'] != 0:\n            print(f\"Running command: {run_command['command']}\")\n            print(\"STDOUT:\", run_command['stdout'])\n            print(\"STDERR:\", run_command['stderr'])\n            print(\"Return Code:\", run_command['returncode'])\n        else:\n            print(f\"Running command: {run_command['command']}\")\n            if len(run_command['stdout']) > 1000:\n                print(\"STDOUT:\", run_command['stdout'][:1000] + \"...\")\n            else:\n                print(\"STDOUT:\", run_command['stdout'])\n            print(\"STDERR:\", run_command['stderr'])\n            print(\"Return Code:\", run_command['returncode'])\n    \n>       assert run_command[\n                   'returncode'] == 0, f\"Command '{run_command['command']}' failed with return code {run_command['returncode']}\"\nE       AssertionError: Command 'python3 ./test.py -f 2-query/fill.py' failed with return code 1\nE       assert 1 == 0\n\ntest_server_linux.py:67: AssertionError"}, "teardown": {"duration": 18.992953614, "outcome": "failed", "crash": {"path": "/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/test_server_linux.py", "lineno": 18, "message": "assert 1 == 0\n +  where 1 = CompletedProcess(args='python3 versionCheckAndUninstall.py -v 3.3.2.6 -m enterprise -u', returncode=1, stdout=\"taospy version  2.7.15 \\n['sudo', 'launchctl', 'start', 'com.tdengine.taosd']\\n\", stderr='sudo: 3 incorrect password attempts\\nTraceback (most recent call last):\\n  File \"/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/versionCheckAndUninstall.py\", line 83, in <module>\\n    conn = taos.connect()\\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/__init__.py\", line 65, in connect\\n    return TaosConnection(*args, **kwargs)\\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/connection.py\", line 25, in __init__\\n    self._conn = self._chandle.connect(self._host, self._user, self._password, self._database, self._port)\\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/cinterface.py\", line 2013, in connect\\n    return taos_connect(host, user, password, db, port)\\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/cinterface.py\", line 249, in taos_connect\\n    raise ConnectionError(errstr, errno)\\ntaos.error.ConnectionError: [0x000b]: Unable to establish connection\\n').returncode"}, "traceback": [{"path": "test_server_linux.py", "lineno": 29, "message": ""}, {"path": "test_server_linux.py", "lineno": 18, "message": "AssertionError"}], "stdout": "CMD: python3 versionCheckAndUninstall.py -v 3.3.2.6 -m enterprise -u\nSTDOUT: taospy version  2.7.15 \n['sudo', 'launchctl', 'start', 'com.tdengine.taosd']\n\nSTDERR: sudo: 3 incorrect password attempts\nTraceback (most recent call last):\n  File \"/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/versionCheckAndUninstall.py\", line 83, in <module>\n    conn = taos.connect()\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/__init__.py\", line 65, in connect\n    return TaosConnection(*args, **kwargs)\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/connection.py\", line 25, in __init__\n    self._conn = self._chandle.connect(self._host, self._user, self._password, self._database, self._port)\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/cinterface.py\", line 2013, in connect\n    return taos_connect(host, user, password, db, port)\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/cinterface.py\", line 249, in taos_connect\n    raise ConnectionError(errstr, errno)\ntaos.error.ConnectionError: [0x000b]: Unable to establish connection\n\nReturn Code: 1\n", "longrepr": "@pytest.fixture(scope=\"module\")\n    def setup_module():\n        def run_command(command):\n            result = subprocess.run(command, capture_output=True, text=True, shell=True)\n            print(\"CMD:\", command)\n            print(\"STDOUT:\", result.stdout)\n            print(\"STDERR:\", result.stderr)\n            print(\"Return Code:\", result.returncode)\n            assert result.returncode == 0\n            return result\n    \n        # setup before module tests\n        cmd = \"bash getAndRunInstaller.sh -m enterprise -f server -l false -c x64 -v 3.3.2.6 -o smoking -s nas -t tar\"\n        run_command(cmd)\n    \n        yield\n    \n        # teardown after module tests\n        cmd = \"python3 versionCheckAndUninstall.py -v 3.3.2.6 -m enterprise -u\"\n>       run_command(cmd)\n\ntest_server_linux.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncommand = 'python3 versionCheckAndUninstall.py -v 3.3.2.6 -m enterprise -u'\n\n    def run_command(command):\n        result = subprocess.run(command, capture_output=True, text=True, shell=True)\n        print(\"CMD:\", command)\n        print(\"STDOUT:\", result.stdout)\n        print(\"STDERR:\", result.stderr)\n        print(\"Return Code:\", result.returncode)\n>       assert result.returncode == 0\nE       assert 1 == 0\nE        +  where 1 = CompletedProcess(args='python3 versionCheckAndUninstall.py -v 3.3.2.6 -m enterprise -u', returncode=1, stdout=\"taospy version  2.7.15 \\n['sudo', 'launchctl', 'start', 'com.tdengine.taosd']\\n\", stderr='sudo: 3 incorrect password attempts\\nTraceback (most recent call last):\\n  File \"/Users/xuyunlong/Desktop/TDengine/packaging/smokeTest/versionCheckAndUninstall.py\", line 83, in <module>\\n    conn = taos.connect()\\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/__init__.py\", line 65, in connect\\n    return TaosConnection(*args, **kwargs)\\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/connection.py\", line 25, in __init__\\n    self._conn = self._chandle.connect(self._host, self._user, self._password, self._database, self._port)\\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/cinterface.py\", line 2013, in connect\\n    return taos_connect(host, user, password, db, port)\\n  File \"/Users/xuyunlong/Library/Python/3.9/lib/python/site-packages/taos/cinterface.py\", line 249, in taos_connect\\n    raise ConnectionError(errstr, errno)\\ntaos.error.ConnectionError: [0x000b]: Unable to establish connection\\n').returncode\n\ntest_server_linux.py:18: AssertionError"}}]}